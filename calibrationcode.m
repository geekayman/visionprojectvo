% Auto-generated by cameraCalibrator app on 17-Dec-2019
%-------------------------------------------------------


% Define images to process
imageFileNames = {'C:\Users\ayman\Desktop\calibration\calibration (3).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (4).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (7).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (8).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (10).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (11).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (12).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (13).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (14).jpg',...
    'C:\Users\ayman\Desktop\calibration\calibration (15).jpg',...
    };
% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Read the first image to obtain image size
originalImage = imread(imageFileNames{1});
[mrows, ncols, ~] = size(originalImage);

% Generate world coordinates of the corners of the squares
squareSize = 3;  % in units of 'centimeters'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'centimeters', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', [], ...
    'ImageSize', [mrows, ncols]);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams);

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
undistortedImage = undistortImage(originalImage, cameraParams);


imOrig = imread('C:\Users\ayman\Desktop\calibration\calibration (4).jpg');
figure; imshow(imOrig);
title('Input Image');
im = undistortImage(imOrig,cameraParams);
[imagePoints,boardSize] = detectCheckerboardPoints(im);
[rotationMatrix,translationVector] = extrinsics(...
    imagePoints,worldPoints,cameraParams);
P = cameraMatrix(cameraParams,rotationMatrix,translationVector)